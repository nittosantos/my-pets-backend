// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Recurrence {
  once
  daily
  weekly
  monthly
}

enum TaskStatus {
  pending
  completed
  canceled
}

enum AppointmentStatus {
  scheduled
  completed
  canceled
}

enum PetType {
  dog
  cat
  bird
  other
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  pets      Pet[]
}

model Pet {
  id           String        @id @default(uuid())
  name         String
  type         PetType
  breed        String?
  age          Int?
  createdAt    DateTime      @default(now())
  userId       String
  user         User          @relation(fields: [userId], references: [id])
  appointments Appointment[]
  tasks        Task[]

  @@index([userId])
}

model Appointment {
  id        String            @id @default(uuid())
  date      DateTime
  vetName   String
  reason    String
  notes     String?
  status    AppointmentStatus @default(scheduled)
  petId     String
  pet       Pet               @relation(fields: [petId], references: [id])
  createdAt DateTime          @default(now())

  @@index([petId])
}

model Task {
  id          String     @id @default(uuid())
  title       String
  description String?
  date        DateTime
  recurrence  Recurrence @default(once)
  status      TaskStatus @default(pending)
  petId       String
  pet         Pet        @relation(fields: [petId], references: [id])
  createdAt   DateTime   @default(now())

  @@index([petId])
}
